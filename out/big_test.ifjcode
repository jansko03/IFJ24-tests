.IFJcode24
DEFVAR GF@retval
JUMP $main



#Build-in fucntion ifj.substring
LABEL $$substring
PUSHFRAME
CREATEFRAME
MOVE GF@retval nil@nil
DEFVAR TF@char
DEFVAR TF@len_str
DEFVAR TF@end_cond
STRLEN TF@len_str LF@%0
GT TF@end_cond LF@%1 TF@len_str
JUMPIFEQ $$substring-end TF@end_cond bool@true
EQ TF@end_cond LF@%1 TF@len_str
JUMPIFEQ $$substring-end TF@end_cond bool@true
GT TF@end_cond LF@%2 TF@len_str
JUMPIFEQ $$substring-end TF@end_cond bool@true
LT TF@end_cond LF@%1 int@0
JUMPIFEQ $$substring-end TF@end_cond bool@true
LT TF@end_cond LF@%2 int@0
JUMPIFEQ $$substring-end TF@end_cond bool@true
GT TF@end_cond LF@%1 LF@%2
JUMPIFEQ $$substring-end TF@end_cond bool@true
MOVE GF@retval string@
DEFVAR TF@i
MOVE TF@i LF@%1
LABEL $$substring-while-start-1
EQ TF@end_cond TF@i LF@%2
JUMPIFEQ $$substring-while-end-1 TF@i LF@%2
GETCHAR TF@char LF@%0 TF@i
CONCAT GF@retval GF@retval TF@char
ADD TF@i TF@i int@1
JUMP $$substring-while-start-1
LABEL $$substring-while-end-1
LABEL $$substring-end
POPFRAME
RETURN

LABEL $$strcmp
PUSHFRAME
CREATEFRAME
DEFVAR TF@len_str1
DEFVAR TF@len_str2
DEFVAR TF@min_len
DEFVAR TF@bool_tmp
MOVE GF@retval int@0
STRLEN TF@len_str1 LF@%0
STRLEN TF@len_str2 LF@%1
GT TF@bool_tmp TF@len_str1 TF@len_str2
JUMPIFEQ $$strcmp-if-else-1 TF@bool_tmp bool@false
MOVE TF@min_len TF@len_str2
JUMP $$strcmp-if-end-1
LABEL $$strcmp-if-else-1
MOVE TF@min_len TF@len_str1
JUMPIFEQ $$strcmp-end TF@len_str2 int@0
LABEL $$strcmp-if-end-1
DEFVAR TF@ascii1
DEFVAR TF@ascii2
DEFVAR TF@i
MOVE TF@i int@0
LABEL $$strcmp-while-start-1
JUMPIFEQ $$strcmp-while-end-1 TF@min_len TF@i
STRI2INT TF@ascii1 LF@%0 TF@i
STRI2INT TF@ascii2 LF@%1 TF@i
JUMPIFEQ $$strcmp-if-else-2 TF@ascii1 TF@ascii2
GT TF@bool_tmp TF@ascii1 TF@ascii2
JUMPIFEQ $$strcmp-if-else-3 TF@bool_tmp bool@true
MOVE GF@retval int@-1
JUMP $$strcmp-if-end-3
LABEL $$strcmp-if-else-3
MOVE GF@retval int@1
LABEL $$strcmp-if-end-3
JUMP $$strcmp-end
LABEL $$strcmp-if-else-2
ADD TF@i TF@i int@1
JUMP $$strcmp-while-start-1
LABEL $$strcmp-while-end-1
JUMPIFEQ $$strcmp-end TF@len_str1 TF@len_str2
GT TF@bool_tmp TF@len_str1 TF@len_str2
JUMPIFEQ $$strcmp-if-else-4 TF@bool_tmp bool@false
MOVE GF@retval int@1
JUMP $$strcmp-if-end-4
LABEL $$strcmp-if-else-4
MOVE GF@retval int@-1
LABEL $$strcmp-if-end-4
LABEL $$strcmp-end
POPFRAME
RETURN

LABEL $$ord
PUSHFRAME
CREATEFRAME
DEFVAR TF@len_str
DEFVAR TF@bool_tmp
MOVE GF@retval int@0
LT TF@bool_tmp LF@%1 int@0
JUMPIFEQ $$ord-end TF@bool_tmp bool@true
JUMPIFEQ $$ord-end LF@%0 string@
STRLEN TF@len_str LF@%0
SUB TF@len_str TF@len_str int@1
GT TF@bool_tmp LF@%1 TF@len_str
JUMPIFEQ $$ord-end TF@bool_tmp bool@true
STRI2INT GF@retval LF@%0 LF@%1
LABEL $$ord-end
POPFRAME
RETURN

LABEL $main
CREATEFRAME
DEFVAR TF@tmp_bool
DEFVAR TF@_in_str
DEFVAR TF@_expected
DEFVAR TF@_inputStr
DEFVAR TF@_num
DEFVAR TF@_input
DEFVAR TF@_break
DEFVAR TF@_sum
DEFVAR TF@%1
DEFVAR TF@_combined
DEFVAR TF@_str2
DEFVAR TF@_str1
DEFVAR TF@%0
DEFVAR TF@_factorialResult
DEFVAR TF@_factorialInput
DEFVAR TF@tmp_2
DEFVAR TF@tmp_1
DEFVAR TF@_i
DEFVAR TF@_result
DEFVAR TF@_b
DEFVAR TF@_a
PUSHS string@Vitaj\032v\032komplexnom\032testovacom\032programe\032pre\032jazyk\032IFJ24!\010
POPS GF@retval
WRITE GF@retval
PUSHS int@42
POPS TF@_a
PUSHS int@13
POPS TF@_b
PUSHS int@42
PUSHS int@13
ADDS
POPS TF@_result
PUSHS string@Sucet\032cisel:\032
POPS GF@retval
WRITE GF@retval
PUSHS TF@_result
POPS GF@retval
WRITE GF@retval
PUSHS string@\010
POPS GF@retval
WRITE GF@retval
PUSHS TF@_result
PUSHS int@50
GTS
POPS TF@tmp_bool
JUMPIFNEQ &if-else-1 TF@tmp_bool bool@true
PUSHS int@10
POPS TF@_result
PUSHS string@Vysledok\032je\032vacsi\032ako\03250.\010
POPS GF@retval
WRITE GF@retval
JUMP &if-end-1
LABEL &if-else-1
PUSHS string@Vysledok\032je\032mensi\032alebo\032rovny\03250.\010
POPS GF@retval
WRITE GF@retval
LABEL &if-end-1
PUSHS string@Vypis\032cisel\032od\0321\032do\0325:\010
POPS GF@retval
WRITE GF@retval
PUSHS int@1
POPS TF@_i
LABEL &while-cond-2
PUSHS TF@_i
PUSHS int@5
POPS TF@tmp_2
POPS TF@tmp_1
PUSHS TF@tmp_1
PUSHS TF@tmp_2
LTS
PUSHS TF@tmp_1
PUSHS TF@tmp_2
EQS
ORS
POPS TF@tmp_bool
JUMPIFNEQ &while-end-2 TF@tmp_bool bool@true
PUSHS TF@_i
POPS GF@retval
WRITE GF@retval
PUSHS string@\010
POPS GF@retval
WRITE GF@retval
PUSHS TF@_i
PUSHS int@1
ADDS
POPS TF@_i
JUMP &while-cond-2
LABEL &while-end-2
PUSHS int@5
POPS TF@_factorialInput
PUSHS int@5
POPS TF@%0
CALL $factorial
PUSHS GF@retval
POPS TF@_factorialResult
PUSHS string@Faktorial\032cisla\032
POPS GF@retval
WRITE GF@retval
PUSHS int@5
POPS GF@retval
WRITE GF@retval
PUSHS string@\032je\032
POPS GF@retval
WRITE GF@retval
PUSHS TF@_factorialResult
POPS GF@retval
WRITE GF@retval
PUSHS string@.\010
POPS GF@retval
WRITE GF@retval
PUSHS string@Testovanie\032prace\032s\032retazcami.
POPS GF@retval
PUSHS GF@retval
POPS TF@_str1
PUSHS string@\032IFJ24\032je\032super!
POPS GF@retval
PUSHS GF@retval
POPS TF@_str2
PUSHS TF@_str1
POPS GF@retval
MOVE TF@%1 GF@retval
PUSHS TF@_str2
POPS GF@retval
CONCAT GF@retval TF@%1 GF@retval
PUSHS GF@retval
POPS TF@_combined
PUSHS string@Spojeny\032retazec:\032
POPS GF@retval
WRITE GF@retval
PUSHS TF@_combined
POPS GF@retval
WRITE GF@retval
PUSHS string@\010
POPS GF@retval
WRITE GF@retval
PUSHS int@0
POPS TF@_sum
PUSHS string@Zadajte\032cisla\032na\032scitanie\032(0\032ukonci\032vstup):\010
POPS GF@retval
WRITE GF@retval
PUSHS int@1
POPS TF@_break
LABEL &while-cond-3
PUSHS TF@_break
PUSHS int@0
EQS
NOTS
POPS TF@tmp_bool
JUMPIFNEQ &while-end-3 TF@tmp_bool bool@true
READ GF@retval int
PUSHS GF@retval
POPS TF@_input
PUSHS TF@_input
POPS TF@_num
JUMPIFEQ &if-else-4 nil@nil TF@_num
PUSHS TF@_num
PUSHS int@0
EQS
POPS TF@tmp_bool
JUMPIFNEQ &if-else-5 TF@tmp_bool bool@true
PUSHS int@0
POPS TF@_break
JUMP &if-end-5
LABEL &if-else-5
PUSHS TF@_sum
PUSHS TF@_num
ADDS
POPS TF@_sum
LABEL &if-end-5
JUMP &if-end-4
LABEL &if-else-4
PUSHS string@Neplatny\032vstup!\032Skuste\032znova.\010
POPS GF@retval
WRITE GF@retval
LABEL &if-end-4
JUMP &while-cond-3
LABEL &while-end-3
PUSHS string@Sucet\032zadanych\032cisel\032je:\032
POPS GF@retval
WRITE GF@retval
PUSHS TF@_sum
POPS GF@retval
WRITE GF@retval
PUSHS string@\010
POPS GF@retval
WRITE GF@retval
PUSHS string@Zadajte\032'ahoj',\032aby\032ste\032pokracovali:\010
POPS GF@retval
WRITE GF@retval
READ GF@retval string
PUSHS GF@retval
POPS TF@_inputStr
PUSHS string@ahoj
POPS GF@retval
PUSHS GF@retval
POPS TF@_expected
PUSHS TF@_inputStr
POPS TF@_in_str
JUMPIFEQ &if-else-6 nil@nil TF@_in_str
PUSHS TF@_in_str
POPS TF@%0
PUSHS TF@_expected
POPS TF@%1
CALL $$strcmp
PUSHS GF@retval
PUSHS int@0
EQS
POPS TF@tmp_bool
JUMPIFNEQ &if-else-7 TF@tmp_bool bool@true
PUSHS string@Zadany\032retazec\032je\032spravny!\010
POPS GF@retval
WRITE GF@retval
JUMP &if-end-7
LABEL &if-else-7
PUSHS string@Nespravny\032retazec.\032Koncim\032program.\0321\010
POPS GF@retval
WRITE GF@retval
JUMP $$end
LABEL &if-end-7
JUMP &if-end-6
LABEL &if-else-6
PUSHS string@Nespravny\032retazec.\032Koncim\032program.\0322\010
POPS GF@retval
WRITE GF@retval
JUMP $$end
LABEL &if-end-6
PUSHS string@Testovaci\032program\032ukonceny\032uspesne.\010
POPS GF@retval
WRITE GF@retval
JUMP $$end

LABEL $factorial
PUSHFRAME
CREATEFRAME
DEFVAR TF@tmp_bool
DEFVAR TF@_n
MOVE TF@_n LF@%0
DEFVAR TF@%0
DEFVAR TF@tmp_2
DEFVAR TF@tmp_1
PUSHS TF@_n
PUSHS int@1
POPS TF@tmp_2
POPS TF@tmp_1
PUSHS TF@tmp_1
PUSHS TF@tmp_2
LTS
PUSHS TF@tmp_1
PUSHS TF@tmp_2
EQS
ORS
POPS TF@tmp_bool
JUMPIFNEQ &if-else-8 TF@tmp_bool bool@true
PUSHS int@1
POPS GF@retval
POPFRAME
RETURN
JUMP &if-end-8
LABEL &if-else-8
LABEL &if-end-8
PUSHS TF@_n
PUSHS TF@_n
PUSHS int@1
SUBS
POPS TF@%0
CALL $factorial
PUSHS GF@retval
MULS
POPS GF@retval
POPFRAME
RETURN

LABEL $$end

