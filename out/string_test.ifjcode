.IFJcode24
DEFVAR GF@retval
JUMP $main



#Build-in fucntion ifj.substring
LABEL $$substring
PUSHFRAME
CREATEFRAME
MOVE GF@retval nil@nil
DEFVAR TF@char
DEFVAR TF@len_str
DEFVAR TF@end_cond
STRLEN TF@len_str LF@%0
GT TF@end_cond LF@%1 TF@len_str
JUMPIFEQ $$substring-end TF@end_cond bool@true
EQ TF@end_cond LF@%1 TF@len_str
JUMPIFEQ $$substring-end TF@end_cond bool@true
GT TF@end_cond LF@%2 TF@len_str
JUMPIFEQ $$substring-end TF@end_cond bool@true
LT TF@end_cond LF@%1 int@0
JUMPIFEQ $$substring-end TF@end_cond bool@true
LT TF@end_cond LF@%2 int@0
JUMPIFEQ $$substring-end TF@end_cond bool@true
GT TF@end_cond LF@%1 LF@%2
JUMPIFEQ $$substring-end TF@end_cond bool@true
MOVE GF@retval string@
DEFVAR TF@i
MOVE TF@i LF@%1
LABEL $$substring-while-start-1
EQ TF@end_cond TF@i LF@%2
JUMPIFEQ $$substring-while-end-1 TF@i LF@%2
GETCHAR TF@char LF@%0 TF@i
CONCAT GF@retval GF@retval TF@char
ADD TF@i TF@i int@1
JUMP $$substring-while-start-1
LABEL $$substring-while-end-1
LABEL $$substring-end
POPFRAME
RETURN

LABEL $$strcmp
PUSHFRAME
CREATEFRAME
DEFVAR TF@len_str1
DEFVAR TF@len_str2
DEFVAR TF@min_len
DEFVAR TF@bool_tmp
MOVE GF@retval int@0
STRLEN TF@len_str1 LF@%0
STRLEN TF@len_str2 LF@%1
GT TF@bool_tmp TF@len_str1 TF@len_str2
JUMPIFEQ $$strcmp-if-else-1 TF@bool_tmp bool@false
MOVE TF@min_len TF@len_str2
JUMP $$strcmp-if-end-1
LABEL $$strcmp-if-else-1
MOVE TF@min_len TF@len_str1
JUMPIFEQ $$strcmp-end TF@len_str2 int@0
LABEL $$strcmp-if-end-1
DEFVAR TF@ascii1
DEFVAR TF@ascii2
DEFVAR TF@i
MOVE TF@i int@0
LABEL $$strcmp-while-start-1
JUMPIFEQ $$strcmp-while-end-1 TF@min_len TF@i
STRI2INT TF@ascii1 LF@%0 TF@i
STRI2INT TF@ascii2 LF@%1 TF@i
JUMPIFEQ $$strcmp-if-else-2 TF@ascii1 TF@ascii2
GT TF@bool_tmp TF@ascii1 TF@ascii2
JUMPIFEQ $$strcmp-if-else-3 TF@bool_tmp bool@true
MOVE GF@retval int@-1
JUMP $$strcmp-if-end-3
LABEL $$strcmp-if-else-3
MOVE GF@retval int@1
LABEL $$strcmp-if-end-3
JUMP $$strcmp-end
LABEL $$strcmp-if-else-2
ADD TF@i TF@i int@1
JUMP $$strcmp-while-start-1
LABEL $$strcmp-while-end-1
JUMPIFEQ $$strcmp-end TF@len_str1 TF@len_str2
GT TF@bool_tmp TF@len_str1 TF@len_str2
JUMPIFEQ $$strcmp-if-else-4 TF@bool_tmp bool@false
MOVE GF@retval int@1
JUMP $$strcmp-if-end-4
LABEL $$strcmp-if-else-4
MOVE GF@retval int@-1
LABEL $$strcmp-if-end-4
LABEL $$strcmp-end
POPFRAME
RETURN

LABEL $$ord
PUSHFRAME
CREATEFRAME
DEFVAR TF@len_str
DEFVAR TF@bool_tmp
MOVE GF@retval int@0
LT TF@bool_tmp LF@%1 int@0
JUMPIFEQ $$ord-end TF@bool_tmp bool@true
JUMPIFEQ $$ord-end LF@%0 string@
STRLEN TF@len_str LF@%0
SUB TF@len_str TF@len_str int@1
GT TF@bool_tmp LF@%1 TF@len_str
JUMPIFEQ $$ord-end TF@bool_tmp bool@true
STRI2INT GF@retval LF@%0 LF@%1
LABEL $$ord-end
POPFRAME
RETURN

LABEL $main
CREATEFRAME
DEFVAR TF@tmp_bool
DEFVAR TF@_a_len
DEFVAR TF@_j
DEFVAR TF@tmp_2
DEFVAR TF@tmp_1
DEFVAR TF@_i
DEFVAR TF@_sub_without_null
DEFVAR TF@%2
DEFVAR TF@%0
DEFVAR TF@_sub
DEFVAR TF@_test
DEFVAR TF@_cc
DEFVAR TF@%1
DEFVAR TF@_len_after
DEFVAR TF@_str_before
DEFVAR TF@_str_after
DEFVAR TF@_b
DEFVAR TF@_a_without_null
DEFVAR TF@_a
READ GF@retval string
PUSHS GF@retval
POPS TF@_a
PUSHS string@
POPS GF@retval
PUSHS GF@retval
POPS TF@_a_without_null
PUSHS TF@_a
POPS TF@_b
JUMPIFEQ &if-else-1 nil@nil TF@_b
PUSHS TF@_b
POPS TF@_a_without_null
JUMP &if-end-1
LABEL &if-else-1
LABEL &if-end-1
PUSHS TF@_a
POPS GF@retval
WRITE GF@retval
PUSHS string@\010
POPS GF@retval
WRITE GF@retval
PUSHS string@--after
POPS GF@retval
PUSHS GF@retval
POPS TF@_str_after
PUSHS string@before--
POPS GF@retval
PUSHS GF@retval
POPS TF@_str_before
PUSHS TF@_str_after
POPS GF@retval
STRLEN GF@retval GF@retval
PUSHS GF@retval
POPS TF@_len_after
PUSHS string@Sring\032and\032length:\032
POPS GF@retval
PUSHS GF@retval
POPS GF@retval
MOVE TF@%1 GF@retval
PUSHS TF@_str_after
POPS GF@retval
CONCAT GF@retval TF@%1 GF@retval
PUSHS GF@retval
POPS GF@retval
WRITE GF@retval
PUSHS TF@_len_after
POPS GF@retval
WRITE GF@retval
PUSHS string@\010
POPS GF@retval
WRITE GF@retval
PUSHS TF@_str_before
POPS GF@retval
MOVE TF@%1 GF@retval
PUSHS TF@_a_without_null
POPS GF@retval
CONCAT GF@retval TF@%1 GF@retval
PUSHS GF@retval
POPS GF@retval
MOVE TF@%1 GF@retval
PUSHS TF@_str_after
POPS GF@retval
CONCAT GF@retval TF@%1 GF@retval
PUSHS GF@retval
POPS TF@_cc
PUSHS TF@_cc
POPS GF@retval
WRITE GF@retval
PUSHS string@\010
POPS GF@retval
WRITE GF@retval
PUSHS string@
POPS GF@retval
PUSHS GF@retval
POPS GF@retval
MOVE TF@%1 GF@retval
PUSHS string@
POPS GF@retval
PUSHS GF@retval
POPS GF@retval
CONCAT GF@retval TF@%1 GF@retval
PUSHS GF@retval
POPS TF@_cc
PUSHS TF@_cc
POPS GF@retval
WRITE GF@retval
PUSHS TF@_cc
POPS GF@retval
STRLEN GF@retval GF@retval
PUSHS GF@retval
POPS GF@retval
WRITE GF@retval
PUSHS string@\010
POPS GF@retval
WRITE GF@retval
PUSHS string@abcdef
POPS GF@retval
PUSHS GF@retval
POPS TF@_test
PUSHS TF@_test
POPS TF@%0
PUSHS int@1
POPS TF@%1
PUSHS int@3
POPS TF@%2
CALL $$substring
PUSHS GF@retval
POPS TF@_sub
PUSHS TF@_sub
POPS TF@_sub_without_null
JUMPIFEQ &if-else-2 nil@nil TF@_sub_without_null
PUSHS TF@_sub_without_null
POPS GF@retval
MOVE TF@%1 GF@retval
PUSHS string@\010
POPS GF@retval
PUSHS GF@retval
POPS GF@retval
CONCAT GF@retval TF@%1 GF@retval
PUSHS GF@retval
POPS GF@retval
WRITE GF@retval
JUMP &if-end-2
LABEL &if-else-2
LABEL &if-end-2
PUSHS string@abeceda:\032
POPS GF@retval
WRITE GF@retval
PUSHS int@65
POPS TF@_i
LABEL &while-cond-3
PUSHS int@90
PUSHS TF@_i
POPS TF@tmp_2
POPS TF@tmp_1
PUSHS TF@tmp_1
PUSHS TF@tmp_2
GTS
PUSHS TF@tmp_1
PUSHS TF@tmp_2
EQS
ORS
POPS TF@tmp_bool
JUMPIFNEQ &while-end-3 TF@tmp_bool bool@true
PUSHS TF@_i
POPS TF@_j
PUSHS TF@_j
POPS GF@retval
INT2CHAR GF@retval GF@retval
PUSHS GF@retval
POPS GF@retval
WRITE GF@retval
PUSHS TF@_i
PUSHS int@1
ADDS
POPS TF@_i
JUMP &while-cond-3
LABEL &while-end-3
PUSHS string@\010
POPS GF@retval
WRITE GF@retval
PUSHS TF@_a_without_null
POPS GF@retval
STRLEN GF@retval GF@retval
PUSHS GF@retval
POPS TF@_a_len
PUSHS int@0
POPS TF@_j
LABEL &while-cond-4
PUSHS TF@_a_len
PUSHS TF@_j
GTS
POPS TF@tmp_bool
JUMPIFNEQ &while-end-4 TF@tmp_bool bool@true
PUSHS TF@_a_without_null
POPS TF@%0
PUSHS TF@_j
POPS TF@%1
CALL $$ord
PUSHS GF@retval
POPS GF@retval
WRITE GF@retval
PUSHS string@\010
POPS GF@retval
WRITE GF@retval
PUSHS TF@_j
PUSHS int@1
ADDS
POPS TF@_j
JUMP &while-cond-4
LABEL &while-end-4
JUMP $$end

LABEL $$end

